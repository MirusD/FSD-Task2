@import '../../theme/variables';

$layout-override: ();
@if variable-exists(layout-settings) {
  $layout-override: $layout-settings;
}

// ****** Settings ******
$layout-settings: map-merge((
        content-max-width: 1460px,
), $layout-override);

.layout {
  display: flex;
  flex-direction: column;
  height: 100%;
  max-width: map_get($layout-settings, content-max-width);
  margin: 0 auto;
  background-color: transparent;
  background-repeat: no-repeat;

  &__header {
    display: flex;
    flex: 0 0 auto;
  }

  &__main {
    display: flex;
    flex: 1 0 auto;
  }

  &__footer {
    display: flex;
    flex: 0 0 auto;
  }

  &__container {
    display: flex;
    flex: 1 1 100%;
    align-content: flex-start;

    @for $i from 1 to 180 {
      $basis: $i * 10;

      &_basis-#{$basis}.layout__container {
        flex-basis: #{$basis}px;
      }
    }

    @for $grow from 0 to 10 {
      &_grow-#{$grow} {
        flex-grow: $grow;
      }
    }

    @for $shrink from 0 to 10 {
      &_shrink-#{$shrink} {
        flex-shrink: $shrink;
      }
    }

    &_block {
      display: block;
    }

    &_left {
      flex-grow: 0;
      margin-right: auto;
    }

    &_right {
      flex-grow: 0;
      margin-left: auto;
    }

    &_center {
      flex-grow: 0;
      margin-right: auto;
      margin-left: auto;
    }

    &_column {
      flex-direction: column;

      & > .layout__container {
        flex-basis: auto;
      }
    }

    &_column-reverse {
      flex-direction: column-reverse;

      & > .layout__container {
        flex-basis: auto;
      }
    }

    &_row-reverse {
      flex-direction: row-reverse;
    }

    &_wrap {
      flex-wrap: wrap;
    }

    &_wrap-reverse {
      flex-wrap: wrap-reverse;
    }

    &_basis-auto.layout__container {
      flex-basis: auto;
    }
  }
}

